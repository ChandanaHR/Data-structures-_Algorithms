import java.io.*;
import java.util.*;
import java.lang.*;

class Node {
    int data;
    Node left,right;
    int hd;
    Node(int key)
    {
        data = key;
        hd = Integer.MAX_VALUE;
        left=right=null;
    }
}

public class Main {
    public static Node insertleft(Node node,int item)
    {
        node.left = new Node(item);
        return node.left;
    }
    public static Node insertright(Node node,int item)
    {
        node.right = new Node(item);
        return node.right;
    }
    public static ArrayList<Integer> bottomview(Node root)
    {
        ArrayList<Integer> res = new ArrayList<>();
        Queue<Node> q = new LinkedList<Node>();
        TreeMap<Integer,Integer> map = new TreeMap<>();
        root.hd = 0;
        q.add(root);
        while(!q.isEmpty())
        {
            Node temp = q.remove();
            int hd = temp.hd;
            map.put(hd,temp.data);
            if(temp.left!=null)
            {
                temp.left.hd = hd-1;
                q.add(temp.left);
            }
            if(temp.right!=null)
            {
                temp.right.hd = hd+1;
                q.add(temp.right);
            }
        }
        for(Map.Entry<Integer,Integer> entry : map.entrySet())
        {
            res.add(entry.getValue());
        }
        return res;
    }
    public static void main(String[] args)
    {
        Node root = new Node(10);
        insertleft(root,20);
        insertright(root,30);
        insertleft(root.left,40);
        insertright(root.left,60);
        
        ArrayList<Integer> ans =  bottomview(root);
        for(Integer i : ans)
        {
            System.out.print(i+" ");
        }
    }
}