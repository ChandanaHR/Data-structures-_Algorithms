Print Binary tree in level order traversal in spiral form
import java.io.*;
import java.util.*;
import java.lang.*;

class Node {
    int data;
    Node left,right;
    Node(int key)
    {
        data = key;
        left=right=null;
    }
}

public class Main {
    public static Node insertleft(Node node,int item)
    {
        node.left = new Node(item);
        return node.left;
    }
    public static Node insertright(Node node,int item)
    {
        node.right = new Node(item);
        return node.right;
    }
    public static void spiral(Node root)
    {
        Stack<Node> s1 = new Stack<>();
        Stack<Node> s2 = new Stack<>();
        s1.push(root);
        while(!s1.isEmpty() || !s2.isEmpty())
        {
            while(!s1.isEmpty())
            {
                Node temp = s1.peek();
                System.out.print(temp.data+" ");
                s1.pop();
                if(temp.right!=null)
                {
                    s2.push(temp.right);
                }
                if(temp.left!=null)
                {
                    s2.push(temp.left);
                }
            }
            while(!s2.isEmpty())
            {
                Node temp = s2.peek();
                System.out.print(temp.data+" ");
                s2.pop();
                if(temp.left!=null)
                {
                    s1.push(temp.left);
                }
                if(temp.right!=null)
                {
                    s1.push(temp.right);
                }
            }
        }
    }
    public static void main(String[] args)
    {
        Node root = new Node(1);
        insertleft(root,2);
        insertright(root,3);
        insertleft(root.left,4);
        insertright(root.left,5);
        insertleft(root.right,6);
        insertright(root.right,7);
        
        spiral(root);
    }
}