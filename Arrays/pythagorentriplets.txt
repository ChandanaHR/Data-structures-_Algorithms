class Solution {
    boolean checkTriplet(int[] arr, int n) {
        // Create a HashMap to store the square of each element as keys
        // and the corresponding original element as values.
        HashMap<Integer, Integer> squareMap = new HashMap<>();

        // Populate the squareMap with the squares of elements.
        for (int i = 0; i < n; i++) {
            int square = arr[i] * arr[i];
            squareMap.put(square, arr[i]);
        }

        // Iterate through the squareMap to find triplets with the sum of squares.
        for (int square1 : squareMap.keySet()) {
            for (int square2 : squareMap.keySet()) {
                // Calculate the sum of two squared values.
                int sumOfSquares = square1 + square2;

                // Check if the sum exists in the squareMap, indicating the presence of a triplet.
                if (squareMap.containsKey(sumOfSquares)) {
                    return true;
                }
            }
        }

        // If no triplet is found, return false.
        return false;
    }
}