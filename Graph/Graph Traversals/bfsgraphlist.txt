import java.io.*;
import java.util.*;
import java.lang.*;

class Edge {
    int source;
    int destination;
    Edge(int s,int d) {
        source = s;
        destination = d;
    }
}

public class Main{
    public static void creategraph(ArrayList<Edge> graph[]) {
        for(int i=0;i<graph.length;i++) {
            graph[i] = new ArrayList<>();
        }
        graph[0].add(new Edge(0,1));
        graph[0].add(new Edge(0,2));
        graph[1].add(new Edge(1,0));
        graph[1].add(new Edge(1,2));
        graph[1].add(new Edge(1,3));
        graph[2].add(new Edge(2,0));
        graph[2].add(new Edge(2,1));
        graph[2].add(new Edge(2,4));
        graph[3].add(new Edge(3,1));
        graph[3].add(new Edge(3,4));
        graph[4].add(new Edge(4,2));
        graph[4].add(new Edge(4,3));
    }
    public static void display(ArrayList<Edge> graph[]) {
        for(int i=0;i<graph.length;i++) {
            for(int j=0;j<graph[i].size();j++) {
                Edge e = graph[i].get(j);
                System.out.print(e.source+"->"+e.destination+" ");
            }
            System.out.println();
        }
    }
    public static void breadthfirstsearch(ArrayList<Edge> graph[]) {
        boolean visited[] = new boolean[graph.length];
        Queue<Integer> q = new LinkedList<>();
        q.add(0);
        while(!q.isEmpty()) {
            int current = q.remove();
            if(visited[current]==false) {
                System.out.print(current+" ");
                visited[current] = true;
                for(int i=0;i<graph[current].size();i++) {
                    Edge e = graph[current].get(i);
                    q.add(e.destination);
                }
            }
        }
    } 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int v = sc.nextInt();
        ArrayList<Edge> graph[] = new ArrayList[v];
        creategraph(graph);
        display(graph);
        breadthfirstsearch(graph);
    }
}